swagger: '2.0'
info:
  title: Goboard  
  description: Goboard API
  version: "1.0.0"
# the domain of the service
host: localhost:8080
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /
produces:
  - application/json
paths:
  /backend:
    get:
      summary: Returns the backend
      description: |
        Returns the backend (the post history)
      produces:
        - text/xml
        - application/xml
        - application/json
        - text/tsv
      parameters:
        - name: last
          in: query
          description: Last id known by the client.
          required: false
          type: number
          format: int
      tags:
        - Backend
      responses:
        '200':
          description: An XML document with backend data
          schema:
            $ref: '#/definitions/Board'
        default:
          description: Unexpected error
  /backend/{format}:
    get:
      summary: Returns the backend in specified format
      description: |
        Returns the backend (the post history)
      produces:
        - text/xml
        - application/xml
        - application/json
        - text/tsv
      parameters:
        - name: last
          in: query
          description: Last id known by the client.
          required: false
          type: number
          format: int
        - name: format
          in: path
          description: Desired output format.
          required: true
          type: string
      tags:
        - Backend
      responses:
        '200':
          description: An XML/JSON/TSV document with backend data
          schema:
            $ref: '#/definitions/Board'
        default:
          description: Unexpected error
  /post:
    post:
      summary: Post a new message
      description: |
        Post a new message
      parameters:
        - name: message
          in: body
          description: Message to post.
          required: true
          schema:
            type: string
            format: string
            example: "Plop"
        - name: Cookie
          in: header
          description: Authentification cookie.
          required: false
          type: string
          format: string
      consumes: 
        - text/plain
      tags:
        - Backend
      responses:
        '200':
          description: Message stored
          headers:
            X-Post-Id:
              type: integer
              format: int64
              description: id of the message
        default:
          description: Unexpected error
  /user/add:
    post:
      summary: Add a new user
      description: |
        Add a new user
      parameters:
        - name: user
          in: formData
          description: User's login
          required: true
          type: string
          format: string
        - name: password
          in: formData
          description: User's password
          required: true
          type: string
          format: string
      consumes: 
        - multipart/form-data
      tags:
        - User
      responses:
        '200':
          description: User created
          headers:
            Set-Cookie:
              type: string
              format: string
              description: Authenticated user's cookie
        default:
          description: Unexpected error
  /user/login:
    post:
      summary: Authenticate a user
      description: |
        Authenticate a user
      parameters:
        - name: user
          in: formData
          description: User's login
          required: true
          type: string
          format: string
        - name: password
          in: formData
          description: User's password
          required: true
          type: string
          format: string
      consumes: 
        - multipart/form-data
      tags:
        - User
      responses:
        '200':
          description: User logged in
          headers:
            Set-Cookie:
              type: string
              format: string
              description: Authenticated user's cookie
        '401':
          description: Authentication failed
        default:
          description: Unexpected error
  /admin/user/{login}:
    delete:
      summary: Deletes a user
      description: |
        Deletes a user by it's login
      parameters:
        - name: login
          in: path
          description: User login to delete.
          required: true
          type: string
        - name: Token-Id
          in: header
          description: Admin token.
          required: true
          type: string
          format: string
      tags:
        - Admin
      responses:
        '200':
          description: Message deleted
  /admin/post/{id}:
    delete:
      summary: Deletes a post
      description: |
        Deletes a post by it's id
      parameters:
        - name: id
          in: path
          description: Post Id to delete.
          required: true
          type: integer
          format: int64
        - name: Token-Id
          in: header
          description: Admin token.
          required: true
          type: string
          format: string
      tags:
        - Admin
      responses:
        '200':
          description: Post deleted
definitions:
  Board:
    type: object
    required: [site, posts]
    properties:
      site:
        type: string
        format: url
        xml:
          attribute: true
      posts:
        type: array
        items:
          $ref: '#/definitions/Post'
  Post:
    type: object
    required: [time, id, info, message, login]
    properties:
      time:
        type: integer
        format: int64
        xml:
          attribute: true
      id:
        type: integer
        format: int64
        xml:
          attribute: true
      info:
        type: string
      message:
        type: string
      login:
        type: string
